cat("\014")
taxonKey<-name_suggest("Perameles nasuta")
key<-taxonKey$key[1]
data<-occ_search(key)
data<- data$data
colname <- colnames(data)
colname[which(colname=="decimalLatitude")] = "decimallatitude"
colname[which(colname=="decimalLongitude")] = "decimallongitude"
colname[which(colname=="countryCode")] = "countrycode"
colname[which(colname=="scientificName")] = "scientificname"
colnames(data)<-colname
tidyData <- as.data.frame(data)
tidyData <- add_flags(tidyData)
library(XML)
result <- xmlParse(file = "C:\Users\Thiloshon\RProjects\GSOC\0067829-160910150852091\dataset\0daed095-478a-4af6-abf5-18acb790fbb2.xml")
result <- xmlParse(file = "0067829-160910150852091\dataset\0daed095-478a-4af6-abf5-18acb790fbb2.xml")
result <- xmlParse(file = "0067829-160910150852091/dataset/0daed095-478a-4af6-abf5-18acb790fbb2.xml")
result
data<- read.csv("0067842-160910150852091/0067842-160910150852091.csv")
data<- read.csv("0067842-160910150852091/0067842-160910150852091.csv", header = TRUE)
data<- read.csv("0067842-160910150852091/0067842-160910150852091.csv", header = TRUE, sep = "/t")
data<- read.csv("0067842-160910150852091/0067842-160910150852091.csv", header = TRUE, sep = "\t")
data
str(data)
data<- data[1:500,]
summary(data)
str(data)
add_flags(data)
name_backbone(class = "Mammalia")
name_lookup(rank = "CLASS")
View(data)
data<- occ_data(classKey = 1, country = "AU", hasCoordinate = TRUE)
g<-data$data
head(g)
head(data)
occ_data(classKey = 1, country = "AU", hasCoordinate = TRUE)
occ_data( country = "AU", hasCoordinate = TRUE)
s<-occ_data( country = "AU", hasCoordinate = TRUE)
j<-s$data
j$classKey
j
names(j)
j$kingdom
j$classKey
s<-occ_data(classKey = 121 country = "AU", hasCoordinate = TRUE)
s<-occ_data(classKey = 121, country = "AU", hasCoordinate = TRUE)
s
l<-s$data
l$kingdom
s<-occ_data(classKey = 121, country = "AU", hasCoordinate = TRUE, limit = 5000)
l>-s$data
l<-s$data
str(l$kingdom)
i<-as.factor(l$kingdom)
str(i)
i<-as.factor(l$classKey)
str(i)
data<-as.data.frame(s$data)
data
names(data)
s<-occ_data(classKey = 121, country = "AU", hasCoordinate = TRUE, limit = 5000)
s<-occ_data(classKey = 359, country = "AU", hasCoordinate = TRUE, limit = 50)
i<-as.factor(s$data$classKey)
i
s
s$data$kingdom
data
names(data)
add_flags(data[1:100,])
library(rgeospatialquality)
library(rgbif)
library(plyr)
occAM <- function(country = "AU",classKey=359,minimal=FALSE){
#attaching the required packages
library(rgeospatialquality)
library(rgbif)
library(plyr)
# retrieving data using the rgbif package
for(i in 0:9)
{
if(i==0){
output<-occ_data(
country=country,
classKey=classKey,
minimal=minimal,
start=i,
limit=500,
hasCoordinate = TRUE
)
dataset<-output$data
}
else{
d<-occ_data(
country=country,
classKey=classKey,
minimal=minimal,
start=i,
limit=500,
hasCoordinate = TRUE
)
dataset <- rbind.fill(dataset,d$data)
}
}
#applying GQ API to add flags (taking 1000 at a time beacuse
#of the constraint of the function)
dataset <- format_gq(dataset,source="rgbif")
for(i in 0:4){
if(i==0){
print(dim(dataset))
datasetflags <- add_flags(dataset[(i*1000+1):(i*1000+1000),])
print(dim(datasetflags))
flags <- datasetflags$flags
d <- datasetflags[,1:ncol(datasetflags)-1]
}
else{
tempdatasetflags <- add_flags(dataset[(i*1000+1):(i*1000+1000),])
print(dim(tempdatasetflags))
tempflags <- tempdatasetflags$flags
tempdataset <- tempdatasetflags[,1:ncol(tempdatasetflags)-1]
flags <- rbind.fill(flags,tempflags)
d <- rbind.fill(d,tempdataset)
}
}
d$flags <- as.data.frame(flags)
return(d)
}
occAM()
num_dfs <- 1000
s<-occ_data(classKey = 121, country = "AU", hasCoordinate = TRUE, limit = 5000)
data<-as.data.frame(s$data)
stripData <- split(data, rep(1:num_dfs, each = round(NROW(data) / num_dfs, -4)))
str(data)
stripData <- split(data, rep(1:num_dfs, each = round(NROW(data) / num_dfs, -4)))
round(NROW(data) / num_dfs, -4)
round(NROW(data) / num_dfs)
stripData <- split(data, rep(1:num_dfs, each = round(NROW(data) / num_dfs)))
class(stripData)
stripData
rep(1:4, 2)
rep(1:4, each = 2)
rep(1:10, each = round(NROW(data) / 10))
rep(1:1000, each = round(NROW(data) / 1000))
rep(1:1000, each = round(NROW(data) / 5))
stripData <- split(data, rep(1:1000, each = round(NROW(data) / 5)))
stripData <- split(data, rep(1:num_dfs, each = round(NROW(data) / num_dfs)))
stripData <- split(data, rep(1:num_dfs, each = round(NROW(data) / 10)))
summary(stripData)
stripData <- split(data, rep(1:num_dfs, each = round(NROW(data) / num_dfs)))
summary(stripData)
num_dfs <- 5
stripData <- split(data, rep(1:num_dfs, each = round(NROW(data) / num_dfs)))
summary(stripData)
round(NROW(data) / num_dfs)
stripData[[1]]
stripData[1]
head(stripData[1])
class(stripData$`1`)
stripData$`1`$name
stripData$`2`$name
head(stripData$`2`$name)
head(stripData$`1`$name)
lapply(stripData, add_flags)
s<-occ_data(classKey = 121, country = "AU", hasCoordinate = TRUE, limit = 5000)
data<-as.data.frame(s$data)
colname <- colnames(data)
colname[which(colname=="decimalLatitude")] = "decimallatitude"
colname[which(colname=="decimalLongitude")] = "decimallongitude"
colname[which(colname=="countryCode")] = "countrycode"
colname[which(colname=="scientificName")] = "scientificname"
colnames(data)<-colname
num_dfs <- 5
stripData <- split(data, rep(1:num_dfs, each = round(NROW(data) / num_dfs)))
lapply(stripData, add_flags)
cat("\014")
finalData<- lapply(stripData, add_flags)
class(finalData)
str(finalData)
names(finalData$`1`)
finalset<- as.data.frame(finalData)
str(finalset)
str(finalData$`1`)
112*5
gt<-lapply(finalData, rbind)
str(gt)
class(gt)
gt<-do.call("rbind", finalData)
merge(finalData)
gt<- data.frame()
lapply(finalData, function(df) {gt<- rbind(gt, df)})
gt
gt<- rbind(gt, finalData$`1`)
gt
gt<- rbind(gt, finalData$`2`)
gt<- rbind(gt, finalData$`2`, `row.names<-FALSE)
)
)
''
stop()
finalData
cat("/014")
finalData<- lapply(stripData, add_flags)
gt
gt<- rbind(gt, finalData$`2`, row.names<-FALSE)
rownames(finalData$`2`)
gt<- rbind(gt, finalData$`2`, row.names=NULL)
rownames(finalData$`1`)
rownames(finalData$`2`)
rbind.data.frame(finalData$`1`, finalData$`2`)
str(finalData$`1`)
df <- data.frame(matrix(unlist(l), nrow=112, byrow=T),stringsAsFactors=FALSE)
df <- data.frame(matrix(unlist(finalData), nrow=112, byrow=T),stringsAsFactors=FALSE)
str(df)
df <- data.frame(matrix(unlist(finalData), nrow=5000, byrow=T),stringsAsFactors=FALSE)
str(df)
names(df)
head(df)
df<-do.call(rbind, finalData)
library(plyr)
df<-ldply(finalData, rbind)
rbind.fill(finalData)
finalData$`1`$flags
class(finalData)
class(finalData$`1`)
k<-as.data.frame(finalData$`1`)
library(data.table)
head(rbindlist(data))
head(rbindlist(data)[,1:111])
head(rbindlist(finalData))
cbind(finalData$`1`$flags,finalData$`1`[1:112])
temp<-cbind(finalData$`1`$flags,finalData$`1`[1:112])
names(temp)
names(finalData$`1`)
temp<-cbind(finalData$`1`$flags,finalData$`1`[1:111])
names(temp)
finalData$`1`$flags
h<-finalData$`1`$flags
j<-finalData$`1`[,1:111]
head(j)
str(j)
str(k)
str(h)
h<-cbind(j,k)
str(h)
names(k)
h<-finalData$`1`$flags
j<-finalData$`1`[,1:111]
h<-cbind(j,h)
str(h)
names(h)
finalDataFlag<- lapply(stripData, add_flags)[112]
library(GeospatialQuality)
library(geospatialquality)
library(rgeospatialquality)
finalDataFlag<- lapply(stripData, add_flags)[112]
finalDataFlag
finalData
formatData<- lapply(finalData, function(df) {
j<-df[,1:111]
h<-df$flags
df<-cbind(j,h)
})
str(formatData)
df<-ldply(finalData, rbind)
df<-ldply(formatData, rbind)
str(df)
df<-ldply(formatData, rbind)[2:117]
str(df)
names(df)
names(data)
names(df)
names(data)
cat("\014")
rawData<-occ_data(classKey = 121, country = "AU", hasCoordinate = TRUE, limit = 5000)
library(rgbif)
library(plyr)
rawData<-occ_data(classKey = 121, country = "AU", hasCoordinate = TRUE, limit = 5000)
data<-as.data.frame(s$rawData)
data<-as.data.frame(rawData$Data)
colname <- colnames(data)
class(colname)
colnames(data) <- tolower(colname)
num_dfs <- 5
stripData <- split(data, rep(1:num_dfs, each = round(NROW(data) / num_dfs)))
finalData<- lapply(stripData, add_flags)
formatData<- lapply(finalData, function(df) {
j<-df[,1:111]
h<-df$flags
df<-cbind(j,h)
})
df<-ldply(formatData, rbind)[2:117]
finalData<- lapply(stripData, add_flags)
library(rgeospatialquality)
finalData<- lapply(stripData, add_flags)
formatData<- lapply(finalData, function(df) {
j<-df[,1:111]
h<-df$flags
df<-cbind(j,h)
})
df<-ldply(formatData, rbind)[2:117]
data
data<-as.data.frame(rawData$Data)
data
data<-as.data.frame(rawData$data)
data
colname <- colnames(data)
colnames(data) <- tolower(colname)
num_dfs <- 5
stripData <- split(data, rep(1:num_dfs, each = round(NROW(data) / num_dfs)))
finalData<- lapply(stripData, add_flags)
formatData<- lapply(finalData, function(df) {
j<-df[,1:111]
h<-df$flags
df<-cbind(j,h)
})
df<-ldply(formatData, rbind)[2:117]
df
taxonKey<-name_suggest("Perameles nasuta")
key<-taxonKey$key[1]
data<-occ_search(key)
data<- data$data
colnames(data)<-colname
colnames(data) <- tolower(colname)
colnames(data) <- tolower(colnames(data))
tidyData <- as.data.frame(data)
tidyData <- add_flags(tidyData)
tidyData
